Test ID,p/f,Goal/Summary,Prerequisite,Steps,example requests/data,expected result,actual result,notes
1,pass,verify the software will not accept a GET request at /hash,n/a,send a GET request to /hash,curl --location --request GET 'localhost:8088/hash',405 method not allowed,405 method not allowed GET Not Supported,
2,pass,verify the software will  accept a correctly formtted POST request at /hash,n/a,send a POST request to /hash containing a password,"curl --location --request POST 'localhost:8088/hash' \ --header 'Content-Type: application/json' \ --data-raw '{""password"":""Testing123""}'",201 Created and a job id is generated,200 OK and a job id is generated (1),ideally the response should be a 201 to be more accurate.
3,pass,verify user is able to send GET request to /hash/{jobid} and reveive a hash,Test 2 has been ran and passed,send a GET request to /hash/{jobid},curl --location --request GET 'localhost:8088/hash/1',200 OK and a has is returned,200 OK UHDqb+qdNhQPYyjhyBHjGzWgHIP9OVDJmjzI4Caov8mQ3xcm6yU2J2RfZHw7iYitLSf6VOd4W/mVmyFoKwgF+g==,
4,pass,verify the software will not accept a PUT request at /hash/{jobid},Test 2 has been ran and passed,send a PUT request at /hash/{jobid},"curl --location --request PUT 'localhost:8088/hash/1' \ --header 'Content-Type: application/json' \ --data-raw '{""password"":""somethingelse""}'",405 method not allowed,405 method not allowed PUT Not Supported,
5,pass,verify the software will not accept a PATCH request at /hash/{jobid},Test 2 has been ran and passed,send a PATCH request at /hash/{jobid},"curl --location --request PATCH 'localhost:8088/hash/1' \ --header 'Content-Type: application/json' \ --data-raw '{""password"":""somethingelse""}'",405 method not allowed,405 method not allowed PATCH Not Supported,
6,pass,verify the software will not accept a DELETE request at /hash/{jobid},Test 2 has been ran and passed,send a DELETE request at /hash/{jobid},"curl --location --request DELETE 'localhost:8088/hash/1' \ --header 'Content-Type: application/json' \ --data-raw '{""password"":""somethingelse""}'",405 method not allowed,405 method not allowed DELETE Not Supported,
7,FAIL,verify user is unable to send POST request to /hash with incorrect parameters,n/a,send a POST request to /hash containing something other than a password,"curl --location --request POST 'localhost:8088/hash/3' \ --header 'Content-Type: application/json' \ --data-raw '{""username"":""jawsomejess""}'",400 bad request,200 OK and a job id is generated (3) and a hash was also created as a result (z4PhNX7vuL3xVChQ1m2AB9Yg5AULVxXcg/SpIdNs6c5H0NE8XYXysP+DGNKHfuwvY7kxvUdBeoGlODJ6+SfaPg==),
8,pass,verify user is unable to send a GET request for a hash that does not exist,n/a,send a GET request to /hash/{jobid} for an ID that doesn’t exist,curl --location --request GET 'localhost:8088/hash/1827634',400 bad request,400 bad request,
9,pass,verify user is able to send GET request to /stats and request stats are returned,Test 2 has been ran and passed,send a GET request to /stats,curl --location --request GET 'localhost:8088/stats',200 OK and request stats are returned,"200 OK {""TotalRequests"":4,""AverageTime"":1529660}",
10,FAIL,verify user is unable to send POST request to /stats,n/a,send a POST request to /stats,"curl --location --request POST 'localhost:8088/stats' \ --header 'Content-Type: application/json' \ --data-raw '{""password"":""testnumber2""}'",405 method not allowed,"200 OK {""TotalRequests"":4,""AverageTime"":1529660}",
11,pass,verify user is able to send GET request to /stats and request stats are returned even when no hashes have been created,start a fresh session with no existing hashes,send a GET request to /stats,curl --location --request GET 'localhost:8088/stats',200 OK and request stats are returned,"200 OK {""TotalRequests"":0,""AverageTime"":0}",
12,pass,verify software can handle multiple requests in parallel,n/a,send multiple POST requests to /hash containing a password in parallel,"xargs -I % -P 10 curl --location --request POST 'localhost:8088/hash' --header 'Content-Type: application/json' --data-raw '{""password"":""Testing123""}' < <(printf '%s\n' {1..40})",200 OK and the correct number of job ids are created,200 OK 12345678910111213141516171819202122232425262728293031323334353637383940,
13,FAIL,verify software will shutdown gracefully,n/a,"1. send multiple POST requests to /hash containing a password in parallel
2. while the requests are still running run the shutdown request","1. xargs -I % -P 10 curl --location --request POST 'localhost:8088/hash' --header 'Content-Type: application/json' --data-raw '{""password"":""Testing123""}' < <(printf '%s\n' {1..400})
2. curl -X POST -d 'shutdown' http://localhost:8088/hash","200 OK, software allows any in-flight hashing to complete, software rejects any new requests",200 OK 12345678910111213141516171819202122232425262728293031323334353637383940.…,software does NOT reject new requests and waits till the requests are finished before shutting down
14,pass,verify software will not accept requests after software has successfully shutdown,n/a,"1. run the shutdown command
2. send a POST request to /hash containing a password","1. curl -X POST -d 'shutdown' http://localhost:8088/hash
2. curl --location --request POST 'localhost:8088/hash' \ --header 'Content-Type: application/json' \ --data-raw '{""password"":""Testing123""}' ",Connection Refused,Connection Refused,
15,unknown but I believe it should be FAIL,check if software has a character limit,n/a,send a POST request to /hash containing a very long password,"curl --location --request POST 'localhost:8088/hash' --header 'Content-Type: application/json' --data-raw '{""password"":""lsdkjfhlskdjfhglksdjfhglksdjfhglskdjfhglskdjfhglskdjfhglskdjfhglskjdfhglskdjfhglskdjfhglskdjfhglsdkjfhglskdjfhglskdjfhglksjdhfglksdjfhglskdjfhglskdjfhglskdjfhgsldkjfhgsldkjfhglskdjfhglskdjfhglksdjfhlskdjfhglskdjfhglskdjfhglskdjfhglskdjfhglskdjfhglksdjfhglksjdfglskdjfhgslkdjfhglskjdfhglskdjfghsldkfjh3""}'",unknown needs AC,200 OK 1,I believe this case should fail. Passwords should have upper and lower character limits
16,unknown but I believe it should be FAIL,check if software allows foreign characters,n/a,send a POST request to /hash containing foreign characters,"curl --location --request POST 'lcalhost:8088/hash' --header 'Content-Type: application/json' --data-raw '{""password"":""안녕하세요""}'",unknown needs AC,200 OK 2,I believe this case should fail. Many sites do not support foreign characters.
